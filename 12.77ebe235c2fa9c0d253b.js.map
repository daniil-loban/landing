{"version":3,"sources":["webpack://app/./components/for-task/simple-math/index.vue?48d9","webpack://app/./components/for-task/simple-math/index.js","webpack://app/./components/for-task/simple-math/index.vue?61dd","webpack://app/components/for-task/simple-math/index.vue","webpack://app/./components/for-task/simple-math/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","_s","expression","directives","name","rawName","value","enteredAnswer","attrs","type","placeholder","domProps","on","input","$event","target","composing","check","_withStripped","simple_math","[object Object]","allowedSymbols","maxMultiplyResult","split","min","max","Math","floor","random","numerator","denominator","result","number","factor","abs","symbol","getRandomInt","length","a","b","expected","getFactor","getDenominator","for_task_simple_mathvue_type_script_lang_js_","mixins","keyboard","props","description","String","default","componentInfo","Object","data","countVariants","variants","selectedVariant","ge","operation","getExpression","Array","apply","map","methods","key","$parent","$emit","setResult","component","componentNormalizer","options","__file","__webpack_exports__"],"mappings":"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","file":"12.77ebe235c2fa9c0d253b.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"span\", [_vm._v(_vm._s(_vm.expression) + \" =\")]),\n    _vm._v(\" \"),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.enteredAnswer,\n          expression: \"enteredAnswer\"\n        }\n      ],\n      attrs: { type: \"text\", placeholder: _vm.placeholder },\n      domProps: { value: _vm.enteredAnswer },\n      on: {\n        input: [\n          function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.enteredAnswer = $event.target.value\n          },\n          function($event) {\n            _vm.check($event)\n          }\n        ]\n      }\n    })\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","class GeneratorExpressions {\n  constructor(allowedSymbols) {\n    this.maxMultiplyResult = 250;\n    this.allowedSymbols = allowedSymbols.split(' ');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getRandomInt(min, max) {\n    return min + Math.floor((Math.random() * (max - min)));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getDenominator(numerator, denominator) {\n    let result = denominator;\n    while (result !== 1) {\n      if (numerator % result === 0 && denominator < numerator) {\n        break;\n      }\n      result -= 1;\n    }\n    return result;\n  }\n\n  getFactor(number, factor) {\n    const biggerThanOne = 5;\n    let result = factor * biggerThanOne;\n    while (result !== 1) {\n      if (Math.abs(number * result) <= this.maxMultiplyResult) {\n        break;\n      }\n      result -= 1;\n    }\n    return result;\n  }\n\n  getExpression() {\n    const symbol = this.allowedSymbols[this.getRandomInt(0, this.allowedSymbols.length)];\n    let a = this.getRandomInt(0, 100);\n    let b = this.getRandomInt(0, 100);\n    switch (symbol) {\n      case '+':\n        return { expected: a + b, expression: `${a} + ${b}` };\n      case '-':\n        return { expected: a - b, expression: `${a} - ${b}` };\n      case '*':\n        b = this.getFactor(a, b);\n        return { expected: a * b, expression: `${a} * ${b}` };\n      case '/':\n        b = this.getDenominator(a, b);\n        return { expected: a / b, expression: `${a} / ${b}` };\n      case '**':\n        a = this.getRandomInt(1, 20);\n        b = this.getRandomInt(1, 3);\n        return { expected: a ** b, expression: `${a} ** ${b}` };\n      case '%':\n        return { expected: a % b, expression: `${a} % ${b}` };\n      default:\n        return { expected: null, expression: null };\n    }\n  }\n}\n\n\nexport default { GeneratorExpressions };\n","import mod from \"-!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","<template>\n  <div>\n    <span>{{ expression }} =</span>\n    <input\n      v-model=\"enteredAnswer\"\n      type=\"text\"\n      :placeholder=\"placeholder\"\n      @input=\"check($event)\"\n    >\n  </div>\n</template>\n\n<script>\nimport keyboardMixin from '../../mixins/keyboard';\nimport GeneratorExpressions from './index';\n\nexport default {\n  mixins: [keyboardMixin],\n  props: {\n    description: {\n      type: String,\n      default: () => 'description',\n    },\n    componentInfo: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      enteredAnswer: '',\n      placeholder: this.componentInfo.data.placeholder,\n      expression: null,\n      expected: null,\n      countVariants: 10,\n      variants: [],\n      selectedVariant: -1,\n    };\n  },\n  mounted() {\n    const ge = new GeneratorExpressions\n      .GeneratorExpressions(this.componentInfo.data.operation);\n    const { expected, expression } = ge.getExpression();\n    this.expected = expected;\n    this.expression = expression;\n    this.variants = Array.apply(Array, new Array(this.countVariants))\n      .map(() => this.expected - Math.floor(Math.random() * this.expected * 2));\n    this.variants[Math.floor(Math.random() * this.countVariants)] = this.expected;\n  },\n  methods: {\n    keyDown(key) {\n      switch (key) {\n        case 'Enter':\n        case 'Space':\n          this.$parent.$emit('closeme', '');\n          break;\n        case 'ArrowLeft':\n        case 'ArrowUp':\n          if (this.selectedVariant === 0 || this.selectedVariant === -1) {\n            this.selectedVariant = this.countVariants;\n          }\n          this.selectedVariant -= 1;\n          this.enteredAnswer = this.variants[this.selectedVariant];\n          this.check();\n          break;\n        case 'ArrowRight':\n        case 'ArrowDown':\n          if (this.selectedVariant === this.countVariants - 1) {\n            this.selectedVariant = -1;\n          }\n          this.selectedVariant += 1;\n          this.enteredAnswer = this.variants[this.selectedVariant];\n          this.check();\n          break;\n        default:\n          break;\n      }\n    },\n    check() {\n      this.$parent.setResult(this.enteredAnswer === this.expected);\n    },\n  },\n};\n</script>\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=627aaafb&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniil\\\\Desktop\\\\RS2\\\\daniil-loban-2018Q3\\\\game\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('627aaafb', component.options)\n    } else {\n      api.reload('627aaafb', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=627aaafb&\", function () {\n      api.rerender('627aaafb', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"components/for-task/simple-math/index.vue\"\nexport default component.exports"],"sourceRoot":""}